<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Luo的TD之旅~</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-04-12T17:17:12.613Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Luo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于Houdini的Python环境的搭建</title>
    <link href="http://example.com/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/</id>
    <published>2023-04-11T15:06:00.000Z</published>
    <updated>2023-04-12T17:17:12.613Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章具体写了VSCode以及PyCharm配置Houdini、vex环境 以及代码自动补全相关的内容…</p><span id="more"></span> <h1 id="一、推荐"><a href="#一、推荐" class="headerlink" title="一、推荐"></a>一、推荐</h1><ul><li>如果是vex的话，推荐使用houdiniExprEditor插件链接VSCode</li><li>如果是小功能的python代码，使用安装好环境的VSCode或者Pycharm 新建一个文件，编写好后复制到houdini中运行</li><li>如果是制作插件，推荐使用Pycharm做结构性文件，然后在houdini中编写一个python文件链接到该插件的地址</li></ul><hr><h1 id="二、使用houdiniExprEditor-插件来链接IDE"><a href="#二、使用houdiniExprEditor-插件来链接IDE" class="headerlink" title="二、使用houdiniExprEditor 插件来链接IDE"></a>二、使用houdiniExprEditor 插件来链接IDE</h1><p>这里其实就只是在IDE中可以直接链接houdini中的代码编辑器而已，只是换了一个编写IDE（这里推荐使用VSCode）<br>对于python来说 这个IDE也没有自动补全方法（不推荐）；还不如在2、3配置完的环境中写好代码，然后复制粘贴代码<br>对于Vex来说，在VSCode中装vex相关的自动补全插件后，即可自动补全代码（推荐！）</p><p>1、houdiniExprEditor插件<a href="http://cgtoolbox.com/houdini-expression-editor/">下载路径</a><br>将其解压后，放置你自己的路径中，然后在houdini.env中的HOUDINI_PATH加入该路径<br>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HOUDINI_PATH = &quot;$HOUDINI_PATH;你放置插件的路径/HoudiniExprEditor_v1_4_8;&amp;&quot;</span><br></pre></td></tr></table></figure><p>2、在houdini中的Edit-&gt; Set External Text Editor 指认为你的IDE软件路径（推荐VSCode）<br><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/04.png" alt="示例"><br><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/05.png" alt="示例"><br>3、VSCode中安装插件<br><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/06.png" alt="示例"><br>4、使用的场景：</p><ul><li>vex：在红色区域 右键-&gt;Expression -&gt; Edit in External Editor（推荐！）<br><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/07.png" alt="示例"></li><li>toolbar： 直接在图标上右键，Edit in external editor<br> <img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/08.png" alt="示例"> </li><li>python node：在红色区域 右键-&gt;Expression -&gt; Edit in External Editor<br> <img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/09.png" alt="示例"></li></ul><blockquote><p><a href="https://www.bilibili.com/video/BV18V411a75k/?p=1&vd_source=e886403e6dd3a712bdbdfe8af7cc5a1b">参考视频</a></p></blockquote><hr><h1 id="三、使用VSCode配置环境"><a href="#三、使用VSCode配置环境" class="headerlink" title="三、使用VSCode配置环境"></a>三、使用VSCode配置环境</h1><p>对于一个完整的python环境来说，需要配置python的环境，自动补全等。</p><p>1、在VSCode 中设置interpreter<br> <img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/10.png" alt="示例"><br>设置 interpreter path为<br>D:\Program Files\Side Effects Software\Houdini 19.5.303\bin\hython3.9.exe（根据自己的环境设置）<br>2、设置Settings，左下方的齿轮-&gt;Settings<br> <img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/11.png" alt="示例"><br>右上角 转换为.json文件<br> <img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/12.png" alt="示例"><br> 然后在下面粘贴配置（根据自己安装houdini的路径设置）：<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&quot;python.autoComplete.extraPaths&quot;: [ &quot;D:\\Program Files\\Side Effects Software\\Houdini 19.5.303\\houdini\\python3.9libs&quot; ],</span><br><span class="line">&quot;python.autoComplete.preloadModules&quot;: [&quot;hou&quot;],</span><br><span class="line">&quot;terminal.integrated.env.windows&quot;: &#123; </span><br><span class="line">    &quot;PYTHONPATH&quot; : &quot;D:\\Program Files\\Side Effects Software\\Houdini 19.5.303\\houdini\\python3.9libs&quot;,</span><br><span class="line">    &quot;PATH&quot; : &quot;$&#123;env:PATH&#125;;D:\\Program Files\\Side Effects Software\\Houdini 19.5.303\\bin&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;python.analysis.extraPaths&quot;: [</span><br><span class="line">    &quot;D:\\Program Files\\Side Effects Software\\Houdini 19.5.303\\houdini\\python3.9libs&quot;]</span><br></pre></td></tr></table></figure></p><p>3、重启VSCode之后即有自动补全（但是一开始加载的时候很慢很慢）<br><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/13.png" alt="示例"><br>4、运行时，使用Run Python File 可以运行该代码<br><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/14.png" alt="示例"></p><blockquote><p><a href="https://jurajtomori.wordpress.com/2018/02/20/houdini-tip-using-hou-module-in-visual-studio-code/">参考文章</a></p></blockquote><hr><h1 id="四、使用Pycharm直接配置环境"><a href="#四、使用Pycharm直接配置环境" class="headerlink" title="四、使用Pycharm直接配置环境"></a>四、使用Pycharm直接配置环境</h1><p>【运行部分可能存在问题】</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这里使用pycharm来直接配置环境，以我houdini19.5的配置环境为例<br><strong>1、设置python的interpreter为houdini中的python3.9.exe</strong><br><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/houdinipython01.png" alt="示例"></p><p><strong>2、在project structure中需要加入…&#x2F;Houdini19.5.xxx&#x2F;houdini&#x2F;python3&#x2F;9libs (这个是加载hou 这个库 的关键)</strong></p><p><strong>3、然后在这个中加入一些需要导入的依赖库</strong><br><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/houdinipy2.png" alt="示例"><br><strong>4、hou自动补全出现不了？？</strong><br>由于Pycharm 对于文件的大小有限制，hou的库太大了，所以把限制大小改大即可</p><p><strong>解决方案：</strong>  Help -&gt; Edit Custom Properties 然后在idea.properties 中 加入 一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idea.max.intellisense.filesize=5000</span><br></pre></td></tr></table></figure><p>即可<br><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/houdinipython03.png" alt="示例"></p><blockquote><p><a href="https://www.bilibili.com/video/BV1pi4y1S7DC/?spm_id_from=333.880.my_history.page.click&vd_source=e886403e6dd3a712bdbdfe8af7cc5a1b">参考视频</a><br><a href="https://cloud.tencent.com/developer/article/1577327">参考链接1</a><br><a href="https://www.sidefx.com/forum/topic/74269/">参考链接2</a></p></blockquote><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>关于运行的问题，这里直接运行不了，确实是因为python3.9.exe 没有hou的库<br>（这里如果不需要运行的话，就可以复制代码，在houdini中粘贴，在houdini中运行，也是比较推荐的。然后使用python os库的chdir或者用os.path.join方法在sys.path中加入该python地址 <a href="https://www.bilibili.com/video/BV18V411a75k?p=6&vd_source=e886403e6dd3a712bdbdfe8af7cc5a1b">视频链接</a>）<br>如果确实需要运行，将Interpreter添加D:\Program Files\Side Effects Software\Houdini 19.5.303\bin\hython3.9.exe<br>但是pycharm识别不来hython3.9.exe。所以将 hython3.9.exe 复制一份，改名为python3.9.exe<br>然后就可以添加了<br><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/15.png" alt="示例"><br>然后运行就可以了<br>因为会出现找不到packaging的问题，暂时不清楚有什么影响<br><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/16.png" alt="示例"></p><hr><h1 id="关于houdini内部节点的自动补全"><a href="#关于houdini内部节点的自动补全" class="headerlink" title="关于houdini内部节点的自动补全"></a>关于houdini内部节点的自动补全</h1><p>在上述安装后，houdini.Node等内部的函数还是没有办法自动补全，所以需要参考下面的内容</p><p>如果直接用hou返回的数据定义的变量，这里补全不了<br>所以使用下面的方式加入定义，即可自动补全<br><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/17.png" alt="示例"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myNode:hou.Node= hou.node(&#x27;./obj&#x27;)</span><br></pre></td></tr></table></figure><p><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/18.png" alt="示例"><br>以及定义函数的返回的类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def length_of_two_added_vectors(a: hou.Vector3, b: hou.Vector3) -&gt; hou.Vector3:</span><br><span class="line">    &quot;&quot;&quot;Return length of a sum of two vectors.&quot;&quot;&quot;</span><br><span class="line">    sum_vec: hou.Vector3 = a + b</span><br><span class="line">    return sum_vec</span><br><span class="line"></span><br><span class="line">def length_of_two_added_vectors2(a: hou.Vector3, b: hou.Vector3 ):</span><br><span class="line">    &quot;&quot;&quot;Return length of a sum of two vectors.&quot;&quot;&quot;</span><br><span class="line">    sum_vec: hou.Vector3 = a + b</span><br><span class="line">    return sum_vec</span><br></pre></td></tr></table></figure><p>这里定义了两个函数，第一个定义了返回的值，第二个没有定义<br>定义了返回的值：<br><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/19.png" alt="示例"><br>没有定义返回的值，python就去猜返回的类型：<br><img src="/2023/04/11/%E5%85%B3%E4%BA%8EHoudini%E7%9A%84Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/20.png" alt="示例"></p><blockquote><p><a href="https://jtomori.github.io/2022/2022-07-07.html">文章链接</a></p></blockquote><hr><h1 id="关于-houdini-python-安装外置的库"><a href="#关于-houdini-python-安装外置的库" class="headerlink" title="关于 houdini python 安装外置的库"></a>关于 houdini python 安装外置的库</h1><blockquote><p><a href="https://blog.csdn.net/zx1091515459/article/details/129153192?spm=1001.2101.3001.6650.4&utm_medium=distribute.pc_relevant.none-task-blog-2~default~YuanLiJiHua~Position-4-129153192-blog-102995156.235%5Ev27%5Epc_relevant_recovery_v2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~YuanLiJiHua~Position-4-129153192-blog-102995156.235%5Ev27%5Epc_relevant_recovery_v2&utm_relevant_index=4">参考链接</a></p></blockquote><p>这个是可用的，通过外面的python，pip安装需要的python库，然后再把安装的库复制到\python39\lib\site-packages文件夹下.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本篇文章具体写了VSCode以及PyCharm配置Houdini、vex环境 以及代码自动补全相关的内容…&lt;/p&gt;</summary>
    
    
    
    <category term="Houdini" scheme="http://example.com/categories/Houdini/"/>
    
    <category term="Houdini Python" scheme="http://example.com/categories/Houdini/Houdini-Python/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
</feed>
